// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: library/kubernetes/helm/types.proto

package helm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	schema "namespacelabs.dev/foundation/schema"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HelmReleaseIntent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseName string               `protobuf:"bytes,1,opt,name=release_name,json=releaseName,proto3" json:"release_name,omitempty"`
	Namespace   string               `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"` // Optional.
	Chart       *schema.FileContents `protobuf:"bytes,3,opt,name=chart,proto3" json:"chart,omitempty"`
	Values      *schema.InlineJson   `protobuf:"bytes,4,opt,name=values,proto3" json:"values,omitempty"`
}

func (x *HelmReleaseIntent) Reset() {
	*x = HelmReleaseIntent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_kubernetes_helm_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmReleaseIntent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmReleaseIntent) ProtoMessage() {}

func (x *HelmReleaseIntent) ProtoReflect() protoreflect.Message {
	mi := &file_library_kubernetes_helm_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmReleaseIntent.ProtoReflect.Descriptor instead.
func (*HelmReleaseIntent) Descriptor() ([]byte, []int) {
	return file_library_kubernetes_helm_types_proto_rawDescGZIP(), []int{0}
}

func (x *HelmReleaseIntent) GetReleaseName() string {
	if x != nil {
		return x.ReleaseName
	}
	return ""
}

func (x *HelmReleaseIntent) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HelmReleaseIntent) GetChart() *schema.FileContents {
	if x != nil {
		return x.Chart
	}
	return nil
}

func (x *HelmReleaseIntent) GetValues() *schema.InlineJson {
	if x != nil {
		return x.Values
	}
	return nil
}

type HelmReleaseInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HelmReleaseInstance) Reset() {
	*x = HelmReleaseInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_library_kubernetes_helm_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmReleaseInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmReleaseInstance) ProtoMessage() {}

func (x *HelmReleaseInstance) ProtoReflect() protoreflect.Message {
	mi := &file_library_kubernetes_helm_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmReleaseInstance.ProtoReflect.Descriptor instead.
func (*HelmReleaseInstance) Descriptor() ([]byte, []int) {
	return file_library_kubernetes_helm_types_proto_rawDescGZIP(), []int{1}
}

var File_library_kubernetes_helm_types_proto protoreflect.FileDescriptor

var file_library_kubernetes_helm_types_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e,
	0x65, 0x74, 0x65, 0x73, 0x2f, 0x68, 0x65, 0x6c, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2e, 0x6b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2e, 0x68, 0x65, 0x6c, 0x6d, 0x1a, 0x19,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x01, 0x0a, 0x11, 0x48, 0x65,
	0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x35, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x49, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x15,
	0x0a, 0x13, 0x48, 0x65, 0x6c, 0x6d, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x36, 0x5a, 0x34, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x2f, 0x68, 0x65, 0x6c, 0x6d, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_library_kubernetes_helm_types_proto_rawDescOnce sync.Once
	file_library_kubernetes_helm_types_proto_rawDescData = file_library_kubernetes_helm_types_proto_rawDesc
)

func file_library_kubernetes_helm_types_proto_rawDescGZIP() []byte {
	file_library_kubernetes_helm_types_proto_rawDescOnce.Do(func() {
		file_library_kubernetes_helm_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_library_kubernetes_helm_types_proto_rawDescData)
	})
	return file_library_kubernetes_helm_types_proto_rawDescData
}

var file_library_kubernetes_helm_types_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_library_kubernetes_helm_types_proto_goTypes = []interface{}{
	(*HelmReleaseIntent)(nil),   // 0: library.kubernetes.helm.HelmReleaseIntent
	(*HelmReleaseInstance)(nil), // 1: library.kubernetes.helm.HelmReleaseInstance
	(*schema.FileContents)(nil), // 2: foundation.schema.FileContents
	(*schema.InlineJson)(nil),   // 3: foundation.schema.InlineJson
}
var file_library_kubernetes_helm_types_proto_depIdxs = []int32{
	2, // 0: library.kubernetes.helm.HelmReleaseIntent.chart:type_name -> foundation.schema.FileContents
	3, // 1: library.kubernetes.helm.HelmReleaseIntent.values:type_name -> foundation.schema.InlineJson
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_library_kubernetes_helm_types_proto_init() }
func file_library_kubernetes_helm_types_proto_init() {
	if File_library_kubernetes_helm_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_library_kubernetes_helm_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmReleaseIntent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_library_kubernetes_helm_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmReleaseInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_library_kubernetes_helm_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_library_kubernetes_helm_types_proto_goTypes,
		DependencyIndexes: file_library_kubernetes_helm_types_proto_depIdxs,
		MessageInfos:      file_library_kubernetes_helm_types_proto_msgTypes,
	}.Build()
	File_library_kubernetes_helm_types_proto = out.File
	file_library_kubernetes_helm_types_proto_rawDesc = nil
	file_library_kubernetes_helm_types_proto_goTypes = nil
	file_library_kubernetes_helm_types_proto_depIdxs = nil
}
