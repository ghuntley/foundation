// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.

syntax = "proto3";

package foundation.schema.runtime;

option go_package = "namespacelabs.dev/foundation/schema/runtime";

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "schema/package.proto";

enum ContainerKind {
    CONTAINER_KIND_UNSPECIFIED = 0;
    PRIMARY                    = 1;
    SUPPORT                    = 2;
}

message ContainerWaitStatus {
    repeated ContainerUnitWaitStatus containers   = 1;
    repeated ContainerUnitWaitStatus initializers = 2;
}

message ContainerUnitWaitStatus {
    ContainerReference reference    = 1;
    string             Name         = 2;
    string             status_label = 3;
    Diagnostics        status       = 4;
}

message ContainerReference {
    string              unique_id      = 1;
    string              HumanReference = 2;
    ContainerKind       Kind           = 3;
    google.protobuf.Any opaque         = 4;
}

message Diagnostics {
    bool                      running           = 1;
    google.protobuf.Timestamp started           = 2;
    bool                      waiting           = 3;
    string                    waiting_reason    = 4;
    bool                      crashed           = 5;
    bool                      terminated        = 6;
    string                    terminated_reason = 7;
    int32                     exit_code         = 8;
    int32                     restart_count     = 9;
}

message SetContainerField {
    enum ValueSource {
        VALUE_SOURCE_UNKNOWN             = 0;
        RUNTIME_CONFIG                   = 1;
        RESOURCE_CONFIG                  = 2;
        RESOURCE_CONFIG_SERVICE_ENDPOINT = 3;
    }

    repeated SetValue set_arg = 1;
    repeated SetValue set_env = 2;

    message SetValue {
        string      container_name = 1;  // If empty, set all containers.
        string      key            = 2;  // The target argument or environment variable.
        ValueSource value          = 3;

        foundation.schema.ServiceRef service_ref = 4;  // Only valid if RESOURCE_CONFIG_SERVICE_ENDPOINT is set.
    }
}
