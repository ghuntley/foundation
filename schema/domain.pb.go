// Copyright 2022 Namespace Labs Inc; All rights reserved.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: schema/domain.proto

package schema

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Domain_ManagedType int32

const (
	Domain_MANAGED_UNKNOWN            Domain_ManagedType = 0
	Domain_LOCAL_MANAGED              Domain_ManagedType = 1
	Domain_CLOUD_MANAGED              Domain_ManagedType = 2
	Domain_USER_SPECIFIED             Domain_ManagedType = 3
	Domain_USER_SPECIFIED_TLS_MANAGED Domain_ManagedType = 4
	Domain_CLOUD_TERMINATION          Domain_ManagedType = 5
)

// Enum value maps for Domain_ManagedType.
var (
	Domain_ManagedType_name = map[int32]string{
		0: "MANAGED_UNKNOWN",
		1: "LOCAL_MANAGED",
		2: "CLOUD_MANAGED",
		3: "USER_SPECIFIED",
		4: "USER_SPECIFIED_TLS_MANAGED",
		5: "CLOUD_TERMINATION",
	}
	Domain_ManagedType_value = map[string]int32{
		"MANAGED_UNKNOWN":            0,
		"LOCAL_MANAGED":              1,
		"CLOUD_MANAGED":              2,
		"USER_SPECIFIED":             3,
		"USER_SPECIFIED_TLS_MANAGED": 4,
		"CLOUD_TERMINATION":          5,
	}
)

func (x Domain_ManagedType) Enum() *Domain_ManagedType {
	p := new(Domain_ManagedType)
	*p = x
	return p
}

func (x Domain_ManagedType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Domain_ManagedType) Descriptor() protoreflect.EnumDescriptor {
	return file_schema_domain_proto_enumTypes[0].Descriptor()
}

func (Domain_ManagedType) Type() protoreflect.EnumType {
	return &file_schema_domain_proto_enumTypes[0]
}

func (x Domain_ManagedType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Domain_ManagedType.Descriptor instead.
func (Domain_ManagedType) EnumDescriptor() ([]byte, []int) {
	return file_schema_domain_proto_rawDescGZIP(), []int{0, 0}
}

type Domain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fqdn        string             `protobuf:"bytes,1,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Managed     Domain_ManagedType `protobuf:"varint,3,opt,name=managed,proto3,enum=foundation.schema.Domain_ManagedType" json:"managed,omitempty"`
	TlsFrontend bool               `protobuf:"varint,4,opt,name=tls_frontend,json=tlsFrontend,proto3" json:"tls_frontend,omitempty"` // If set to true, this domain's ingress is TLS terminated.
}

func (x *Domain) Reset() {
	*x = Domain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_domain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domain) ProtoMessage() {}

func (x *Domain) ProtoReflect() protoreflect.Message {
	mi := &file_schema_domain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Domain.ProtoReflect.Descriptor instead.
func (*Domain) Descriptor() ([]byte, []int) {
	return file_schema_domain_proto_rawDescGZIP(), []int{0}
}

func (x *Domain) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *Domain) GetManaged() Domain_ManagedType {
	if x != nil {
		return x.Managed
	}
	return Domain_MANAGED_UNKNOWN
}

func (x *Domain) GetTlsFrontend() bool {
	if x != nil {
		return x.TlsFrontend
	}
	return false
}

type DomainSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fqdn    string             `protobuf:"bytes,1,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	Managed Domain_ManagedType `protobuf:"varint,2,opt,name=managed,proto3,enum=foundation.schema.Domain_ManagedType" json:"managed,omitempty"`
}

func (x *DomainSpec) Reset() {
	*x = DomainSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_domain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainSpec) ProtoMessage() {}

func (x *DomainSpec) ProtoReflect() protoreflect.Message {
	mi := &file_schema_domain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainSpec.ProtoReflect.Descriptor instead.
func (*DomainSpec) Descriptor() ([]byte, []int) {
	return file_schema_domain_proto_rawDescGZIP(), []int{1}
}

func (x *DomainSpec) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *DomainSpec) GetManaged() Domain_ManagedType {
	if x != nil {
		return x.Managed
	}
	return Domain_MANAGED_UNKNOWN
}

type Certificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrivateKey        []byte `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	CertificateBundle []byte `protobuf:"bytes,2,opt,name=certificate_bundle,json=certificateBundle,proto3" json:"certificate_bundle,omitempty"`
	PrivateCa         bool   `protobuf:"varint,3,opt,name=private_ca,json=privateCa,proto3" json:"private_ca,omitempty"` // If true, the certificate was emitted from a private CA, i.e. will be untrusted.
}

func (x *Certificate) Reset() {
	*x = Certificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schema_domain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certificate) ProtoMessage() {}

func (x *Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_schema_domain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certificate.ProtoReflect.Descriptor instead.
func (*Certificate) Descriptor() ([]byte, []int) {
	return file_schema_domain_proto_rawDescGZIP(), []int{2}
}

func (x *Certificate) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *Certificate) GetCertificateBundle() []byte {
	if x != nil {
		return x.CertificateBundle
	}
	return nil
}

func (x *Certificate) GetPrivateCa() bool {
	if x != nil {
		return x.PrivateCa
	}
	return false
}

var File_schema_domain_proto protoreflect.FileDescriptor

var file_schema_domain_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0xa2, 0x02, 0x0a, 0x06, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x3f, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6c, 0x73, 0x5f,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x74, 0x6c, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x0b,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4d,
	0x41, 0x4e, 0x41, 0x47, 0x45, 0x44, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x4d, 0x41, 0x4e,
	0x41, 0x47, 0x45, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x54, 0x4c, 0x53,
	0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x44, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4c,
	0x4f, 0x55, 0x44, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x05, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0x61, 0x0a,
	0x0a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x71, 0x64, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12,
	0x3f, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0x22, 0x7c, 0x0a, 0x0b, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x2d, 0x0a, 0x12, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x61, 0x42, 0x25,
	0x5a, 0x23, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e,
	0x64, 0x65, 0x76, 0x2f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schema_domain_proto_rawDescOnce sync.Once
	file_schema_domain_proto_rawDescData = file_schema_domain_proto_rawDesc
)

func file_schema_domain_proto_rawDescGZIP() []byte {
	file_schema_domain_proto_rawDescOnce.Do(func() {
		file_schema_domain_proto_rawDescData = protoimpl.X.CompressGZIP(file_schema_domain_proto_rawDescData)
	})
	return file_schema_domain_proto_rawDescData
}

var file_schema_domain_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_schema_domain_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_schema_domain_proto_goTypes = []interface{}{
	(Domain_ManagedType)(0), // 0: foundation.schema.Domain.ManagedType
	(*Domain)(nil),          // 1: foundation.schema.Domain
	(*DomainSpec)(nil),      // 2: foundation.schema.DomainSpec
	(*Certificate)(nil),     // 3: foundation.schema.Certificate
}
var file_schema_domain_proto_depIdxs = []int32{
	0, // 0: foundation.schema.Domain.managed:type_name -> foundation.schema.Domain.ManagedType
	0, // 1: foundation.schema.DomainSpec.managed:type_name -> foundation.schema.Domain.ManagedType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_schema_domain_proto_init() }
func file_schema_domain_proto_init() {
	if File_schema_domain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schema_domain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Domain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_domain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schema_domain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Certificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schema_domain_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schema_domain_proto_goTypes,
		DependencyIndexes: file_schema_domain_proto_depIdxs,
		EnumInfos:         file_schema_domain_proto_enumTypes,
		MessageInfos:      file_schema_domain_proto_msgTypes,
	}.Build()
	File_schema_domain_proto = out.File
	file_schema_domain_proto_rawDesc = nil
	file_schema_domain_proto_goTypes = nil
	file_schema_domain_proto_depIdxs = nil
}
