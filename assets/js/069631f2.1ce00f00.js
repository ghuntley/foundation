"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[307],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=i,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return t?r.createElement(h,o(o({ref:n},c),{},{components:t})):r.createElement(h,o({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8606:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return d}});var r=t(3117),i=t(102),a=(t(7294),t(3905)),o=["components"],s={},l="Node.js / Web",p={unversionedId:"integrations/nodejs",id:"integrations/nodejs",title:"Node.js / Web",description:"Namespace natively supports Javascript/TypeScript apps that on the server, in the browser or both:",source:"@site/docs/integrations/nodejs.mdx",sourceDirName:"integrations",slug:"/integrations/nodejs",permalink:"/integrations/nodejs",draft:!1,editUrl:"https://github.com/namespacelabs/documentation/tree/main/docs/integrations/nodejs.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Syntax Reference",permalink:"/syntax-reference"},next:{title:"Architecture",permalink:"/architecture"}},c={},d=[{value:"<code>nodejs</code>",id:"nodejs",level:2},{value:"Existing configuration: package manager",id:"existing-configuration-package-manager",level:3},{value:"Existing configuration: <code>package.json</code>",id:"existing-configuration-packagejson",level:3},{value:"<code>dev</code> environment",id:"dev-environment",level:4},{value:"<code>prod</code>/<code>test</code> environment",id:"prodtest-environment",level:4},{value:"Hybrid mode (server + browser)",id:"hybrid-mode-server--browser",level:3},{value:"<code>web</code>",id:"web",level:2},{value:"Backends",id:"backends",level:3}],u={toc:d};function m(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"nodejs--web"},"Node.js / Web"),(0,a.kt)("p",null,"Namespace natively supports Javascript/TypeScript apps that on the server, in the browser or both:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"To define a server or a hybrid (server/browser) app, use the ",(0,a.kt)("a",{parentName:"li",href:"#nodejs"},(0,a.kt)("inlineCode",{parentName:"a"},"nodejs"))," integration."),(0,a.kt)("li",{parentName:"ul"},"To define a pure browser app (static JS/CSS/HTML, with separate backends), use the ",(0,a.kt)("a",{parentName:"li",href:"#web"},(0,a.kt)("inlineCode",{parentName:"a"},"web")),"\nintegration.")),(0,a.kt)("p",null,"See the ",(0,a.kt)("a",{parentName:"p",href:"/syntax-reference"},"reference")," for more details about the syntax."),(0,a.kt)("h2",{id:"nodejs"},(0,a.kt)("inlineCode",{parentName:"h2"},"nodejs")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"nodejs")," integration allows to avoid writing a custom Dockerfile and use a combination of the\n",(0,a.kt)("inlineCode",{parentName:"p"},".cue")," file and the existing configuration (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json"),") instead to build a Node.js image\neasier. Also file sync between the workstation code and the container is set up, enabling hot\nreload."),(0,a.kt)("h3",{id:"existing-configuration-package-manager"},"Existing configuration: package manager"),(0,a.kt)("p",null,"Namespace automatically detects the package manager from their signature lock file. The following\npackage managers are supported:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"npm")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"yarn")," (v1 and v3)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pnpm"))),(0,a.kt)("h3",{id:"existing-configuration-packagejson"},"Existing configuration: ",(0,a.kt)("inlineCode",{parentName:"h3"},"package.json")),(0,a.kt)("p",null,"Namespace builds the image using a layer-efficient way: first copies the ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," file to the\ncontainer and runs the package manager to install the dependencies; then copies the rest of the\nsource code. Further steps depend on the environment."),(0,a.kt)("h4",{id:"dev-environment"},(0,a.kt)("inlineCode",{parentName:"h4"},"dev")," environment"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"NODE_ENV")," is set to ",(0,a.kt)("inlineCode",{parentName:"li"},"development"),"."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"dev")," script from ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json")," is used as the entry point of the container.")),(0,a.kt)("h4",{id:"prodtest-environment"},(0,a.kt)("inlineCode",{parentName:"h4"},"prod"),"/",(0,a.kt)("inlineCode",{parentName:"h4"},"test")," environment"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"NODE_ENV")," is set to ",(0,a.kt)("inlineCode",{parentName:"li"},"development")," for ",(0,a.kt)("inlineCode",{parentName:"li"},"test"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"production")," for ",(0,a.kt)("inlineCode",{parentName:"li"},"prod"),"."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"build")," script ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json")," is executed (if exists)."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"start")," script from ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json")," is used as the entry point of the container.")),(0,a.kt)("h3",{id:"hybrid-mode-server--browser"},"Hybrid mode (server + browser)"),(0,a.kt)("p",null,"Some frameworks (for example, Next.js) allow to run the same code in the browser and on the server.\nThis is supported with the following caveats:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The user code has access to the ",(0,a.kt)("a",{parentName:"li",href:"/syntax-reference#runtime-config"},(0,a.kt)("inlineCode",{parentName:"a"},"runtime config"))," only when\nrunning on the server."),(0,a.kt)("li",{parentName:"ul"},"The generated ",(0,a.kt)("a",{parentName:"li",href:"#backends"},(0,a.kt)("inlineCode",{parentName:"a"},"backends.ns.js"))," file is available everywhere, but the addresses in the\n",(0,a.kt)("inlineCode",{parentName:"li"},"dev")," environment are only resolvable from the developer workstation and not from within the\ncluster (i.e. not from the server).")),(0,a.kt)("h2",{id:"web"},(0,a.kt)("inlineCode",{parentName:"h2"},"web")),(0,a.kt)("p",null,"In the ",(0,a.kt)("inlineCode",{parentName:"p"},"dev")," environment, the ",(0,a.kt)("inlineCode",{parentName:"p"},"web")," integration is identical to the ",(0,a.kt)("inlineCode",{parentName:"p"},"nodejs")," one: the ",(0,a.kt)("inlineCode",{parentName:"p"},"dev")," script\nis executed at runtime, running ",(0,a.kt)("inlineCode",{parentName:"p"},"vite")," or any other development server with hot-reload."),(0,a.kt)("p",null,"In ",(0,a.kt)("inlineCode",{parentName:"p"},"prod"),"/",(0,a.kt)("inlineCode",{parentName:"p"},"test"),", the code is built using the ",(0,a.kt)("inlineCode",{parentName:"p"},"build")," script and served statically. The ",(0,a.kt)("inlineCode",{parentName:"p"},"dist"),"\ndirectory (by default, can be customized) is copied to the container and served using the ",(0,a.kt)("inlineCode",{parentName:"p"},"nginx"),"\nweb server. This requires explicitly specifying which service correspond to the web server so the\nserving port is consistent between dev and prod."),(0,a.kt)("p",null,"See the\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/namespacelabs/examples/blob/main/multitier/01-simple/frontend/server.cue"},"syntax example"),"."),(0,a.kt)("h3",{id:"backends"},"Backends"),(0,a.kt)("p",null,"The code that runs in the browser needs to be able to communicate with servers in the stack, but it\ndoesn't have access to the ",(0,a.kt)("a",{parentName:"p",href:"/syntax-reference#runtime-config"},(0,a.kt)("inlineCode",{parentName:"a"},"runtime config"))," (it is a\nKubernetes mount). To solve this, Namespace generates a ",(0,a.kt)("inlineCode",{parentName:"p"},"src/config/backends.ns.js")," file that\ncontains the URLs of the requested servers in the stack and adds it to the built image. These URLs\nare accessible from the browser in all environments. The backends need to be explicitly specified in\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"web")," integration definition:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cue"},'backends: {\n  // "api" is an alias to access this specific backend in the frontend code.\n  "api": "namespacelabs.dev/examples/multitier/01-simple/apibackend:webapi"\n}\n')))}m.isMDXComponent=!0}}]);