"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[518],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),g=o,m=d["".concat(l,".").concat(g)]||d[g]||c[g]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1657:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={sidebar_position:4},l="Testing",u={unversionedId:"getting-started/testing",id:"getting-started/testing",title:"Testing",description:"Foundation supports end-to-end testing of a server, and all its dependencies. Gone are the days of putting together testing stacks manually, or wrangling dependencies. We set up your test fixture from the same definition used for development.",source:"@site/docs/getting-started/testing.md",sourceDirName:"getting-started",slug:"/getting-started/testing",permalink:"/getting-started/testing",editUrl:"https://github.com/namespacelabs/docs/tree/main/docs/getting-started/testing.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"sidebar",previous:{title:"Development",permalink:"/getting-started/development"},next:{title:"Deploy to Production",permalink:"/getting-started/deployment"}},p={},c=[],d={toc:c};function g(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"testing"},"Testing"),(0,i.kt)("p",null,"Foundation supports end-to-end testing of a server, and all its dependencies. Gone are the days of putting together testing stacks manually, or wrangling dependencies. We set up your test fixture from the same definition used for development."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fn test")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Brings up a server with its dependencies in the ",(0,i.kt)("inlineCode",{parentName:"li"},"test")," configuration in an isolated Kubernetes namespace."),(0,i.kt)("li",{parentName:"ul"},"Runs a developer-authored test driver."),(0,i.kt)("li",{parentName:"ul"},"Cleans up all resources previously created."),(0,i.kt)("li",{parentName:"ul"},"Uploads the test results to the development registry.")),(0,i.kt)("p",null,"In our example, let's run the tests:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"fn test tests/todos\n")),(0,i.kt)("p",null,"Now that we fixed the bug, let's make sure it never happens again. In fact there is already a test\nfor that, we just need to uncomment a few lines in ",(0,i.kt)("inlineCode",{parentName:"p"},"e2etest.go")," and re-run the test to make sure it\nstill works:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// "Testing" User Journey:\n// Uncomment next 3 lines once the bug with removing items has been fixed in "impl.go".\n// if len(list.Items) != len(tasks)-1 {\n//   return fmt.Errorf("got %d items, expected %d", len(list.Items), len(tasks)-1)\n// }\n')),(0,i.kt)("p",null,"Now that our code is working locally, let's ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"/getting-started/deployment"},"deploy it to production!"))))}g.isMDXComponent=!0}}]);