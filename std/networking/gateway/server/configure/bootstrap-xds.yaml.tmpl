# Base config for a split xDS management server.
admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 0.0.0.0
      port_value: {{.AdminPort}}
dynamic_resources:
  cds_config:
    resource_api_version: V3
    api_config_source:
      api_type: GRPC
      transport_api_version: V3
      grpc_services:
      - envoy_grpc:
          cluster_name: xds_cluster
      set_node_on_first_message_only: true
  lds_config:
    resource_api_version: V3
    api_config_source:
      api_type: GRPC
      transport_api_version: V3
      grpc_services:
      - envoy_grpc:
          cluster_name: xds_cluster
      set_node_on_first_message_only: true
node:
  cluster: {{.NodeCluster}}
  id: {{.NodeId}}
static_resources:
  clusters:
  - connect_timeout: 1s
    load_assignment:
      cluster_name: xds_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            health_check_config:
              # The time to wait for a health check response. If the timeout is reached,
              # the health check is considered failed.
              timeout: "1s"
              # Interval between health checks.
              interval: "5s"
              # For the first health check, Envoy will start health checking after a random 
              # time in ms between 0 and initial_jitter. 
              initial_jitter: 500
              # The number of consecutive health check failures before the health check is considered failed.
              unhealthy_threshold: 3 
              # Log all health check failures and not just the first.
              always_log_health_check_failures: true
              grpc_health_check:
                service_name: "envoy"
            address:
              socket_address:
                address: 127.0.0.1
                port_value: {{.XDSServerPort}}
    http2_protocol_options: {}
    name: xds_cluster
  - connect_timeout: 1s
    load_assignment:
      cluster_name: als_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: {{.ALSListenerPort}}
    http2_protocol_options: {}
    name: als_cluster
